drop table if exists item CASCADE;
create table item
(
    id        bigint generated by default as identity, /*기본 키 생성을 DB에 위임하는 방법, ex.MySQL AutoIncrement*/
    item_name varchar(10),
    price     integer,
    quantity  integer,
    primary key (id)
);

/*
테이블의 기본 키를 선택하는 전략은 크게 2가지가 있다.

- 자연 키(natural key)
비즈니스에 의미가 있는 키
예: 주민등록번호, 이메일, 전화번호

- 대리 키(surrogate key)
비즈니스와 관련 없는 임의로 만들어진 키, 대체 키로도 불린다.
예: 오라클 시퀀스, auto_increment, identity, 키생성 테이블 사용

- 자연 키보다는 대리 키를 권장한다
자연 키와 대리 키는 일장 일단이 있지만 될 수 있으면 대리 키의 사용을 권장한다.
예를 들어 자연 키인 전화번호를 기본 키로 선택한다면 그 번호가 유일할 수는 있지만,
전화번호가 없을 수도 있고 전화번호가 변경될 수도 있다.
따라서 기본 키로 적당하지 않다.

문제는 주민등록번호처럼 그럴듯하게 보이는 값이다.
이 값은 null 이 아니고 유일하며 변하지 않는다는 3가지 조건을 모두 만족하는 것 같다.
하지만 현실과 비즈니스 규칙은 생각보다 쉽게 변한다.
주민등록번호 조차도 여러 가지 이유로 변경될 수 있다.

- 비즈니스 환경은 언젠가 변한다
레거시 시스템을 유지보수할 일이 있었는데, 분석해보니 회원 테이블에 주민등록번호가 기본 키로 잡혀 있었다.
회원과 관련된 수많은 테이블에서 조인을 위 해 주민등록번호를 외래 키로 가지고 있었고 심지어 자식 테이블의 자식 테이블까지 주민등록 번호가 내려가 있었다.
문제는 정부 정책이 변경되면서 법적으로 주민등록번호를 저장할 수 없게 되면서 발생했다.
결국 데이터베이스 테이블은 물론이고 수많은 애플리케이션 로직을 수정 했다.
만약 데이터베이스를 처음 설계할 때부터 자연 키인 주민등록번호 대신에 비즈니스와 관련 없는 대리 키를 사용했다면 수정할 부분이 많지는 않았을 것이다.
*/